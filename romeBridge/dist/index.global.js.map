{"version":3,"sources":["../src/types.ts","../src/widget.ts","../src/terminal.ts"],"sourcesContent":["export enum RomeEventType {\n  TERMINAL_CLICK_BUTTON = \"rome.terminal.click_button\",\n  TERMINAL_BRIDGE_READY = \"rome.terminal.bridge_ready\",\n\n  WIDGET_UPDATE_BUTTON_STATUS = \"rome.widget.update_button_status\",\n}\n\nexport class RomeEvent {\n  public type: RomeEventType | undefined;\n  public payload: any;\n\n  constructor(payload: any) {\n    this.payload = payload;\n  }\n}\n\nexport type RomeEventHandler<T> = (event: T) => void;\n\nexport class TerminalClickButtonEvent extends RomeEvent {\n  static TYPE: RomeEventType = RomeEventType.TERMINAL_CLICK_BUTTON;\n  public type: RomeEventType = RomeEventType.TERMINAL_CLICK_BUTTON;\n}\n\nexport class TerminalBridgeReadyEvent extends RomeEvent {\n  static TYPE: RomeEventType = RomeEventType.TERMINAL_BRIDGE_READY;\n  public type: RomeEventType = RomeEventType.TERMINAL_BRIDGE_READY;\n}\n\nexport class WidgetUpdateButtonStatusEvent extends RomeEvent {\n  static TYPE: RomeEventType = RomeEventType.WIDGET_UPDATE_BUTTON_STATUS;\n  public type: RomeEventType = RomeEventType.WIDGET_UPDATE_BUTTON_STATUS;\n}\n","import {\n  RomeEventHandler,\n  RomeEventType,\n  TerminalBridgeReadyEvent,\n} from \"./types\";\n\nclass WidgetBridge {\n  widgetId = null;\n\n  init() {\n    this.subscribe<TerminalBridgeReadyEvent>(\n      TerminalBridgeReadyEvent.TYPE,\n      (data) => {\n        this.widgetId = data.payload.widgetId;\n        this.namespaceCookiesStorage(data.payload.widgetName)\n      }\n    );\n  }\n\n  /**\n   * There may be potential issues if the widget wants to use storage/cookies before it is initialized\n   * As it won't be on the namespace yet.\n   *\n   * A workaround for this would be for the widget to call this function directly with the prefix hardcoded\n   *\n   * A longer term solution to explore as a fix may be to pass the prefix to the widget via url params\n   * **/\n  namespaceCookiesStorage(prefix:string){\n    const widgetNamespace = `${prefix}-`\n    /** override storage's setItem/getItem **/\n    const set = window.localStorage.setItem\n    const get = window.localStorage.getItem\n    Storage.prototype.setItem = function() {\n      arguments[0] = widgetNamespace+arguments[0]\n      set.apply(this,arguments)\n    }\n    Storage.prototype.getItem = function() {\n      arguments[0] = widgetNamespace+arguments[0]\n      return get.apply(this, arguments)\n    }\n    /** Override the native way that the value of the document.cookie is returned/set **/\n    var cookieDesc = Object.getOwnPropertyDescriptor(Document.prototype, 'cookie') ||\n      Object.getOwnPropertyDescriptor(HTMLDocument.prototype, 'cookie');\n    if (cookieDesc && cookieDesc.configurable) {\n      Object.defineProperty(document, 'cookie', {\n        get: function () {\n          const cookiesStr = cookieDesc.get.call(document);\n          const nameSpacedCookiesArr = cookiesStr.split(\";\").filter(s=>s.trim().startsWith(widgetNamespace))\n          const cookiesArr = nameSpacedCookiesArr.map(s=>s.trim().slice(widgetNamespace.length))\n          return cookiesArr.join(\";\")\n        },\n        set: function (cookieStr) {\n          const attributes = cookieStr.split(\";\")\n          const keyVal = attributes.filter(att=>![\"expires=\",\"path=\",\"domain=\",\"max-age=\",\"secure\",\"samesite\",\"__Secure\",\"__Host\"].some(arg=>att.trim().startsWith(arg)))[0]\n          if (!keyVal) throw new Error(\"Trying to set invalid cookie\"+cookieStr)\n          const [ key, val ] = keyVal.split(\"=\")\n          const replacement = `${widgetNamespace}${key}=${val}`\n          const newCookie = cookieStr.replace(keyVal, replacement)\n          cookieDesc.set.call(document, newCookie);\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n  }\n\n  emit(type: RomeEventType, payload: any) {\n    window.parent.postMessage(\n      { payload: payload, type: type, widgetId: this.widgetId },\n      \"*\"\n    );\n  }\n\n  subscribe<T>(type: RomeEventType, handler: RomeEventHandler<T>) {\n    window.addEventListener(\"message\", (event) => {\n      if (type !== event.data.type) return;\n\n      handler(event.data);\n    });\n  }\n}\n\nexport const widgetBridge = new WidgetBridge();\n","import { RomeEvent, RomeEventHandler, RomeEventType } from \"./types\";\n\nexport class TerminalBridge {\n  iframeWindow: any;\n  widgetId: string;\n\n  constructor(widgetId: string) {\n    this.widgetId = widgetId;\n  }\n\n  setIframeWindow(iframeWindow: any) {\n    this.iframeWindow = iframeWindow;\n  }\n\n  emit(event: RomeEvent) {\n    if (!this.iframeWindow) throw new Error(\"Invalid window object\");\n\n    this.iframeWindow.postMessage({ ...event, widgetId: this.widgetId }, \"*\");\n  }\n\n  subscribe<T>(type: RomeEventType, handler: RomeEventHandler<T>) {\n    window.addEventListener(\"message\", (event) => {\n      if (event.data.widgetId !== this.widgetId) return;\n      if (event.data.type !== type) return;\n\n      handler(event.data);\n    });\n  }\n}\n\ntype TerminalBridgeMap = { [key: string]: TerminalBridge };\n\nexport class TerminalBridgeFactory {\n  bridges: TerminalBridgeMap;\n\n  constructor() {\n    this.bridges = {};\n  }\n\n  getBridge(widgetId: string): TerminalBridge {\n    if (this.bridges[widgetId]) {\n      return this.bridges[widgetId];\n    }\n\n    const bridge = new TerminalBridge(widgetId);\n    this.bridges[widgetId] = bridge;\n\n    return bridge;\n  }\n\n  removeBridge(widgetId: string) {\n    delete this.bridges[widgetId];\n  }\n}\n\nexport const terminalBridgeFactory = new TerminalBridgeFactory();\n"],"mappings":"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","names":[]}